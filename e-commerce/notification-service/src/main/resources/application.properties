spring.application.name=notification-service
server.port=8083

# Mail Properties
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=09842e743ae379
spring.mail.password=2263bdf6680062
spring.mail.protocol=smtp

# Kafka Consumer properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# if use dto for JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# if use schema registry avro for Deserializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
# if not using schema registry avro - then have to tell the path of kafka listener emitted class
#spring.kafka.consumer.properties.spring.json.type.mapping= event:com.zees.microservices.order.event.OrderPlacedEvent
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8085
spring.kafka.consumer.properties.specific.avro.reader=true

# Actuator & observability properties
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=notification-service

management.tracing.sampling.probability=1.0